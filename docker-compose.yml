version: "3.7"
services:

  web:
    build: .
    command: bash -c 'alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --reload'
    restart: always
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
      - celery
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/healthcheck" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 45s

  db:
    image: postgres:15.1-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 45s

  rabbitmq:
    image: 'rabbitmq:3-management'
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    command: celery -A app.celery worker -B -l info
    restart: always
    volumes:
      - .:/code
    depends_on:
      - rabbitmq

  test:
    build: .
    command: bash -c 'pytest -v && exit'
    volumes:
      - .:/code
    depends_on:
      - web
      - test_db
    env_file:
      - .env

  test_db:
    image: postgres:15.1-alpine
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - ./data/test_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${DB_NAME_TEST}
      - POSTGRES_USER=${DB_USER_TEST}
      - POSTGRES_PASSWORD=${DB_PASS_TEST}

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 45s
